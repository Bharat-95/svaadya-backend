generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  uid          String   @unique @default(uuid())
  phone        String
  fullName     String
  email        String?  @unique
  photoUrl     String   @default("https://example.com/default-profile.png")
  role         String   @default("User")
  availability Boolean  @default(true)
  isVeg        Boolean  @default(false) // âœ… true = veg-only chef
  createdAt    DateTime @default(now())

  addresses    Address[]
  dishes       Dish[]    @relation("UserDishes")
  redemptions  PromoRedemption[]
}

model Address {
  id        String   @id @default(cuid())
  userId    String
  fullName  String
  phone     String
  houseNo   String
  floor     String
  area      String
  landmark  String?
  city      String
  state     String
  pincode   String
 latitude  Float @default(0)
longitude Float @default(0)
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}


model Dish {
  id           String   @id @default(cuid())
  name         String
  description  String
  category     String
  type         String
  imageUrls    String[]
  availability Boolean  @default(true)
  prepTime     Int
  price        Float
  servingSize  String
  spiceLevel   String
  chefId       String
  createdAt    DateTime @default(now())

  chef User @relation("UserDishes", fields: [chefId], references: [id]) 
}


model PromoCode {
  id               String         @id @default(cuid())
  code             String         @unique
  description      String?
  discountAmount   Float?         // Flat discount
 type PromoType
   
  discountPercent  Float?         // Percentage discount
  minOrderAmount   Float?         // Minimum order required to apply
  maxDiscount      Float?         // Max discount allowed if percentage
  isActive         Boolean        @default(true)
  singleUse        Boolean        @default(false) // Once per user
  applicableRoles  String[]       // e.g., ["User", "Premium", "Admin"]
  expiryDate       DateTime?
  createdAt        DateTime       @default(now())

  redemptions      PromoRedemption[]
}

enum PromoType {
  FLAT
  PERCENTAGE
}

model PromoRedemption {
  id           String     @id @default(cuid())
  userId       String
  promoCodeId  String
  redeemedAt   DateTime   @default(now())

  user         User       @relation(fields: [userId], references: [id])
  promoCode    PromoCode  @relation(fields: [promoCodeId], references: [id])

  @@unique([userId, promoCodeId])
}

